<?php
/**
 * AuthenticationStatus
 *
 * PHP version 5
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\eSign\Model;

use \ArrayAccess;
/**
 * AuthenticationStatus Class Doc Comment
 *
 * @category    Class
 * @description Contains information about the authentication status.
 * @package     DocuSign\eSign
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AuthenticationStatus implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'access_code_result' => '\DocuSign\eSign\Model\EventResult',
        'phone_auth_result' => '\DocuSign\eSign\Model\EventResult',
        'id_lookup_result' => '\DocuSign\eSign\Model\EventResult',
        'id_questions_result' => '\DocuSign\eSign\Model\EventResult',
        'age_verify_result' => '\DocuSign\eSign\Model\EventResult',
        's_tan_pin_result' => '\DocuSign\eSign\Model\EventResult',
        'ofac_result' => '\DocuSign\eSign\Model\EventResult',
        'live_id_result' => '\DocuSign\eSign\Model\EventResult',
        'facebook_result' => '\DocuSign\eSign\Model\EventResult',
        'google_result' => '\DocuSign\eSign\Model\EventResult',
        'linkedin_result' => '\DocuSign\eSign\Model\EventResult',
        'salesforce_result' => '\DocuSign\eSign\Model\EventResult',
        'twitter_result' => '\DocuSign\eSign\Model\EventResult',
        'open_id_result' => '\DocuSign\eSign\Model\EventResult',
        'any_social_id_result' => '\DocuSign\eSign\Model\EventResult',
        'yahoo_result' => '\DocuSign\eSign\Model\EventResult',
        'sms_auth_result' => '\DocuSign\eSign\Model\EventResult'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'access_code_result' => 'accessCodeResult',
        'phone_auth_result' => 'phoneAuthResult',
        'id_lookup_result' => 'idLookupResult',
        'id_questions_result' => 'idQuestionsResult',
        'age_verify_result' => 'ageVerifyResult',
        's_tan_pin_result' => 'sTANPinResult',
        'ofac_result' => 'ofacResult',
        'live_id_result' => 'liveIDResult',
        'facebook_result' => 'facebookResult',
        'google_result' => 'googleResult',
        'linkedin_result' => 'linkedinResult',
        'salesforce_result' => 'salesforceResult',
        'twitter_result' => 'twitterResult',
        'open_id_result' => 'openIDResult',
        'any_social_id_result' => 'anySocialIDResult',
        'yahoo_result' => 'yahooResult',
        'sms_auth_result' => 'smsAuthResult'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'access_code_result' => 'setAccessCodeResult',
        'phone_auth_result' => 'setPhoneAuthResult',
        'id_lookup_result' => 'setIdLookupResult',
        'id_questions_result' => 'setIdQuestionsResult',
        'age_verify_result' => 'setAgeVerifyResult',
        's_tan_pin_result' => 'setSTanPinResult',
        'ofac_result' => 'setOfacResult',
        'live_id_result' => 'setLiveIdResult',
        'facebook_result' => 'setFacebookResult',
        'google_result' => 'setGoogleResult',
        'linkedin_result' => 'setLinkedinResult',
        'salesforce_result' => 'setSalesforceResult',
        'twitter_result' => 'setTwitterResult',
        'open_id_result' => 'setOpenIdResult',
        'any_social_id_result' => 'setAnySocialIdResult',
        'yahoo_result' => 'setYahooResult',
        'sms_auth_result' => 'setSmsAuthResult'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'access_code_result' => 'getAccessCodeResult',
        'phone_auth_result' => 'getPhoneAuthResult',
        'id_lookup_result' => 'getIdLookupResult',
        'id_questions_result' => 'getIdQuestionsResult',
        'age_verify_result' => 'getAgeVerifyResult',
        's_tan_pin_result' => 'getSTanPinResult',
        'ofac_result' => 'getOfacResult',
        'live_id_result' => 'getLiveIdResult',
        'facebook_result' => 'getFacebookResult',
        'google_result' => 'getGoogleResult',
        'linkedin_result' => 'getLinkedinResult',
        'salesforce_result' => 'getSalesforceResult',
        'twitter_result' => 'getTwitterResult',
        'open_id_result' => 'getOpenIdResult',
        'any_social_id_result' => 'getAnySocialIdResult',
        'yahoo_result' => 'getYahooResult',
        'sms_auth_result' => 'getSmsAuthResult'
    );
  
    
    /**
      * $access_code_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $access_code_result;
    
    /**
      * $phone_auth_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $phone_auth_result;
    
    /**
      * $id_lookup_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $id_lookup_result;
    
    /**
      * $id_questions_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $id_questions_result;
    
    /**
      * $age_verify_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $age_verify_result;
    
    /**
      * $s_tan_pin_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $s_tan_pin_result;
    
    /**
      * $ofac_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $ofac_result;
    
    /**
      * $live_id_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $live_id_result;
    
    /**
      * $facebook_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $facebook_result;
    
    /**
      * $google_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $google_result;
    
    /**
      * $linkedin_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $linkedin_result;
    
    /**
      * $salesforce_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $salesforce_result;
    
    /**
      * $twitter_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $twitter_result;
    
    /**
      * $open_id_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $open_id_result;
    
    /**
      * $any_social_id_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $any_social_id_result;
    
    /**
      * $yahoo_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $yahoo_result;
    
    /**
      * $sms_auth_result 
      * @var \DocuSign\eSign\Model\EventResult
      */
    protected $sms_auth_result;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->access_code_result = $data["access_code_result"];
            $this->phone_auth_result = $data["phone_auth_result"];
            $this->id_lookup_result = $data["id_lookup_result"];
            $this->id_questions_result = $data["id_questions_result"];
            $this->age_verify_result = $data["age_verify_result"];
            $this->s_tan_pin_result = $data["s_tan_pin_result"];
            $this->ofac_result = $data["ofac_result"];
            $this->live_id_result = $data["live_id_result"];
            $this->facebook_result = $data["facebook_result"];
            $this->google_result = $data["google_result"];
            $this->linkedin_result = $data["linkedin_result"];
            $this->salesforce_result = $data["salesforce_result"];
            $this->twitter_result = $data["twitter_result"];
            $this->open_id_result = $data["open_id_result"];
            $this->any_social_id_result = $data["any_social_id_result"];
            $this->yahoo_result = $data["yahoo_result"];
            $this->sms_auth_result = $data["sms_auth_result"];
        }
    }
    
    /**
     * Gets access_code_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getAccessCodeResult()
    {
        return $this->access_code_result;
    }
  
    /**
     * Sets access_code_result
     * @param \DocuSign\eSign\Model\EventResult $access_code_result 
     * @return $this
     */
    public function setAccessCodeResult($access_code_result)
    {
        
        $this->access_code_result = $access_code_result;
        return $this;
    }
    
    /**
     * Gets phone_auth_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getPhoneAuthResult()
    {
        return $this->phone_auth_result;
    }
  
    /**
     * Sets phone_auth_result
     * @param \DocuSign\eSign\Model\EventResult $phone_auth_result 
     * @return $this
     */
    public function setPhoneAuthResult($phone_auth_result)
    {
        
        $this->phone_auth_result = $phone_auth_result;
        return $this;
    }
    
    /**
     * Gets id_lookup_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getIdLookupResult()
    {
        return $this->id_lookup_result;
    }
  
    /**
     * Sets id_lookup_result
     * @param \DocuSign\eSign\Model\EventResult $id_lookup_result 
     * @return $this
     */
    public function setIdLookupResult($id_lookup_result)
    {
        
        $this->id_lookup_result = $id_lookup_result;
        return $this;
    }
    
    /**
     * Gets id_questions_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getIdQuestionsResult()
    {
        return $this->id_questions_result;
    }
  
    /**
     * Sets id_questions_result
     * @param \DocuSign\eSign\Model\EventResult $id_questions_result 
     * @return $this
     */
    public function setIdQuestionsResult($id_questions_result)
    {
        
        $this->id_questions_result = $id_questions_result;
        return $this;
    }
    
    /**
     * Gets age_verify_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getAgeVerifyResult()
    {
        return $this->age_verify_result;
    }
  
    /**
     * Sets age_verify_result
     * @param \DocuSign\eSign\Model\EventResult $age_verify_result 
     * @return $this
     */
    public function setAgeVerifyResult($age_verify_result)
    {
        
        $this->age_verify_result = $age_verify_result;
        return $this;
    }
    
    /**
     * Gets s_tan_pin_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getSTanPinResult()
    {
        return $this->s_tan_pin_result;
    }
  
    /**
     * Sets s_tan_pin_result
     * @param \DocuSign\eSign\Model\EventResult $s_tan_pin_result 
     * @return $this
     */
    public function setSTanPinResult($s_tan_pin_result)
    {
        
        $this->s_tan_pin_result = $s_tan_pin_result;
        return $this;
    }
    
    /**
     * Gets ofac_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getOfacResult()
    {
        return $this->ofac_result;
    }
  
    /**
     * Sets ofac_result
     * @param \DocuSign\eSign\Model\EventResult $ofac_result 
     * @return $this
     */
    public function setOfacResult($ofac_result)
    {
        
        $this->ofac_result = $ofac_result;
        return $this;
    }
    
    /**
     * Gets live_id_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getLiveIdResult()
    {
        return $this->live_id_result;
    }
  
    /**
     * Sets live_id_result
     * @param \DocuSign\eSign\Model\EventResult $live_id_result 
     * @return $this
     */
    public function setLiveIdResult($live_id_result)
    {
        
        $this->live_id_result = $live_id_result;
        return $this;
    }
    
    /**
     * Gets facebook_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getFacebookResult()
    {
        return $this->facebook_result;
    }
  
    /**
     * Sets facebook_result
     * @param \DocuSign\eSign\Model\EventResult $facebook_result 
     * @return $this
     */
    public function setFacebookResult($facebook_result)
    {
        
        $this->facebook_result = $facebook_result;
        return $this;
    }
    
    /**
     * Gets google_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getGoogleResult()
    {
        return $this->google_result;
    }
  
    /**
     * Sets google_result
     * @param \DocuSign\eSign\Model\EventResult $google_result 
     * @return $this
     */
    public function setGoogleResult($google_result)
    {
        
        $this->google_result = $google_result;
        return $this;
    }
    
    /**
     * Gets linkedin_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getLinkedinResult()
    {
        return $this->linkedin_result;
    }
  
    /**
     * Sets linkedin_result
     * @param \DocuSign\eSign\Model\EventResult $linkedin_result 
     * @return $this
     */
    public function setLinkedinResult($linkedin_result)
    {
        
        $this->linkedin_result = $linkedin_result;
        return $this;
    }
    
    /**
     * Gets salesforce_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getSalesforceResult()
    {
        return $this->salesforce_result;
    }
  
    /**
     * Sets salesforce_result
     * @param \DocuSign\eSign\Model\EventResult $salesforce_result 
     * @return $this
     */
    public function setSalesforceResult($salesforce_result)
    {
        
        $this->salesforce_result = $salesforce_result;
        return $this;
    }
    
    /**
     * Gets twitter_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getTwitterResult()
    {
        return $this->twitter_result;
    }
  
    /**
     * Sets twitter_result
     * @param \DocuSign\eSign\Model\EventResult $twitter_result 
     * @return $this
     */
    public function setTwitterResult($twitter_result)
    {
        
        $this->twitter_result = $twitter_result;
        return $this;
    }
    
    /**
     * Gets open_id_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getOpenIdResult()
    {
        return $this->open_id_result;
    }
  
    /**
     * Sets open_id_result
     * @param \DocuSign\eSign\Model\EventResult $open_id_result 
     * @return $this
     */
    public function setOpenIdResult($open_id_result)
    {
        
        $this->open_id_result = $open_id_result;
        return $this;
    }
    
    /**
     * Gets any_social_id_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getAnySocialIdResult()
    {
        return $this->any_social_id_result;
    }
  
    /**
     * Sets any_social_id_result
     * @param \DocuSign\eSign\Model\EventResult $any_social_id_result 
     * @return $this
     */
    public function setAnySocialIdResult($any_social_id_result)
    {
        
        $this->any_social_id_result = $any_social_id_result;
        return $this;
    }
    
    /**
     * Gets yahoo_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getYahooResult()
    {
        return $this->yahoo_result;
    }
  
    /**
     * Sets yahoo_result
     * @param \DocuSign\eSign\Model\EventResult $yahoo_result 
     * @return $this
     */
    public function setYahooResult($yahoo_result)
    {
        
        $this->yahoo_result = $yahoo_result;
        return $this;
    }
    
    /**
     * Gets sms_auth_result
     * @return \DocuSign\eSign\Model\EventResult
     */
    public function getSmsAuthResult()
    {
        return $this->sms_auth_result;
    }
  
    /**
     * Sets sms_auth_result
     * @param \DocuSign\eSign\Model\EventResult $sms_auth_result 
     * @return $this
     */
    public function setSmsAuthResult($sms_auth_result)
    {
        
        $this->sms_auth_result = $sms_auth_result;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\DocuSign\eSign\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\DocuSign\eSign\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
