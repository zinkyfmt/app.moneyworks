<?php
/**
 * IdCheckInformationInput
 *
 * PHP version 5
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\eSign\Model;

use \ArrayAccess;
/**
 * IdCheckInformationInput Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     DocuSign\eSign
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class IdCheckInformationInput implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'address_information_input' => '\DocuSign\eSign\Model\AddressInformationInput',
        'dob_information_input' => '\DocuSign\eSign\Model\DobInformationInput',
        'ssn4_information_input' => '\DocuSign\eSign\Model\Ssn4InformationInput',
        'ssn9_information_input' => '\DocuSign\eSign\Model\Ssn9InformationInput'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'address_information_input' => 'addressInformationInput',
        'dob_information_input' => 'dobInformationInput',
        'ssn4_information_input' => 'ssn4InformationInput',
        'ssn9_information_input' => 'ssn9InformationInput'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'address_information_input' => 'setAddressInformationInput',
        'dob_information_input' => 'setDobInformationInput',
        'ssn4_information_input' => 'setSsn4InformationInput',
        'ssn9_information_input' => 'setSsn9InformationInput'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'address_information_input' => 'getAddressInformationInput',
        'dob_information_input' => 'getDobInformationInput',
        'ssn4_information_input' => 'getSsn4InformationInput',
        'ssn9_information_input' => 'getSsn9InformationInput'
    );
  
    
    /**
      * $address_information_input 
      * @var \DocuSign\eSign\Model\AddressInformationInput
      */
    protected $address_information_input;
    
    /**
      * $dob_information_input 
      * @var \DocuSign\eSign\Model\DobInformationInput
      */
    protected $dob_information_input;
    
    /**
      * $ssn4_information_input 
      * @var \DocuSign\eSign\Model\Ssn4InformationInput
      */
    protected $ssn4_information_input;
    
    /**
      * $ssn9_information_input 
      * @var \DocuSign\eSign\Model\Ssn9InformationInput
      */
    protected $ssn9_information_input;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->address_information_input = $data["address_information_input"];
            $this->dob_information_input = $data["dob_information_input"];
            $this->ssn4_information_input = $data["ssn4_information_input"];
            $this->ssn9_information_input = $data["ssn9_information_input"];
        }
    }
    
    /**
     * Gets address_information_input
     * @return \DocuSign\eSign\Model\AddressInformationInput
     */
    public function getAddressInformationInput()
    {
        return $this->address_information_input;
    }
  
    /**
     * Sets address_information_input
     * @param \DocuSign\eSign\Model\AddressInformationInput $address_information_input 
     * @return $this
     */
    public function setAddressInformationInput($address_information_input)
    {
        
        $this->address_information_input = $address_information_input;
        return $this;
    }
    
    /**
     * Gets dob_information_input
     * @return \DocuSign\eSign\Model\DobInformationInput
     */
    public function getDobInformationInput()
    {
        return $this->dob_information_input;
    }
  
    /**
     * Sets dob_information_input
     * @param \DocuSign\eSign\Model\DobInformationInput $dob_information_input 
     * @return $this
     */
    public function setDobInformationInput($dob_information_input)
    {
        
        $this->dob_information_input = $dob_information_input;
        return $this;
    }
    
    /**
     * Gets ssn4_information_input
     * @return \DocuSign\eSign\Model\Ssn4InformationInput
     */
    public function getSsn4InformationInput()
    {
        return $this->ssn4_information_input;
    }
  
    /**
     * Sets ssn4_information_input
     * @param \DocuSign\eSign\Model\Ssn4InformationInput $ssn4_information_input 
     * @return $this
     */
    public function setSsn4InformationInput($ssn4_information_input)
    {
        
        $this->ssn4_information_input = $ssn4_information_input;
        return $this;
    }
    
    /**
     * Gets ssn9_information_input
     * @return \DocuSign\eSign\Model\Ssn9InformationInput
     */
    public function getSsn9InformationInput()
    {
        return $this->ssn9_information_input;
    }
  
    /**
     * Sets ssn9_information_input
     * @param \DocuSign\eSign\Model\Ssn9InformationInput $ssn9_information_input 
     * @return $this
     */
    public function setSsn9InformationInput($ssn9_information_input)
    {
        
        $this->ssn9_information_input = $ssn9_information_input;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\DocuSign\eSign\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\DocuSign\eSign\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
