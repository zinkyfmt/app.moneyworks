<?php
/**
 * FolderItemV2
 *
 * PHP version 5
 *
 * @category Class
 * @package  DocuSign\eSign
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\eSign\Model;

use \ArrayAccess;
/**
 * FolderItemV2 Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     DocuSign\eSign
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FolderItemV2 implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'owner_name' => 'string',
        'envelope_id' => 'string',
        'envelope_uri' => 'string',
        'status' => 'string',
        'last_modified_date_time' => 'string',
        'sender_user_id' => 'string',
        'sender_name' => 'string',
        'sender_email' => 'string',
        'sender_company' => 'string',
        'created_date_time' => 'string',
        'sent_date_time' => 'string',
        'completed_date_time' => 'string',
        'subject' => 'string',
        'expire_date_time' => 'string',
        'folder_id' => 'string',
        'folder_uri' => 'string',
        'recipients' => '\DocuSign\eSign\Model\Recipients',
        'recipients_uri' => 'string',
        'is21_cfr_part11' => 'string',
        'is_universal_signature_envelope' => 'string'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'owner_name' => 'ownerName',
        'envelope_id' => 'envelopeId',
        'envelope_uri' => 'envelopeUri',
        'status' => 'status',
        'last_modified_date_time' => 'lastModifiedDateTime',
        'sender_user_id' => 'senderUserId',
        'sender_name' => 'senderName',
        'sender_email' => 'senderEmail',
        'sender_company' => 'senderCompany',
        'created_date_time' => 'createdDateTime',
        'sent_date_time' => 'sentDateTime',
        'completed_date_time' => 'completedDateTime',
        'subject' => 'subject',
        'expire_date_time' => 'expireDateTime',
        'folder_id' => 'folderId',
        'folder_uri' => 'folderUri',
        'recipients' => 'recipients',
        'recipients_uri' => 'recipientsUri',
        'is21_cfr_part11' => 'is21CFRPart11',
        'is_universal_signature_envelope' => 'isUniversalSignatureEnvelope'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'owner_name' => 'setOwnerName',
        'envelope_id' => 'setEnvelopeId',
        'envelope_uri' => 'setEnvelopeUri',
        'status' => 'setStatus',
        'last_modified_date_time' => 'setLastModifiedDateTime',
        'sender_user_id' => 'setSenderUserId',
        'sender_name' => 'setSenderName',
        'sender_email' => 'setSenderEmail',
        'sender_company' => 'setSenderCompany',
        'created_date_time' => 'setCreatedDateTime',
        'sent_date_time' => 'setSentDateTime',
        'completed_date_time' => 'setCompletedDateTime',
        'subject' => 'setSubject',
        'expire_date_time' => 'setExpireDateTime',
        'folder_id' => 'setFolderId',
        'folder_uri' => 'setFolderUri',
        'recipients' => 'setRecipients',
        'recipients_uri' => 'setRecipientsUri',
        'is21_cfr_part11' => 'setIs21CfrPart11',
        'is_universal_signature_envelope' => 'setIsUniversalSignatureEnvelope'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'owner_name' => 'getOwnerName',
        'envelope_id' => 'getEnvelopeId',
        'envelope_uri' => 'getEnvelopeUri',
        'status' => 'getStatus',
        'last_modified_date_time' => 'getLastModifiedDateTime',
        'sender_user_id' => 'getSenderUserId',
        'sender_name' => 'getSenderName',
        'sender_email' => 'getSenderEmail',
        'sender_company' => 'getSenderCompany',
        'created_date_time' => 'getCreatedDateTime',
        'sent_date_time' => 'getSentDateTime',
        'completed_date_time' => 'getCompletedDateTime',
        'subject' => 'getSubject',
        'expire_date_time' => 'getExpireDateTime',
        'folder_id' => 'getFolderId',
        'folder_uri' => 'getFolderUri',
        'recipients' => 'getRecipients',
        'recipients_uri' => 'getRecipientsUri',
        'is21_cfr_part11' => 'getIs21CfrPart11',
        'is_universal_signature_envelope' => 'getIsUniversalSignatureEnvelope'
    );
  
    
    /**
      * $owner_name 
      * @var string
      */
    protected $owner_name;
    
    /**
      * $envelope_id The envelope ID of the envelope status that failed to post.
      * @var string
      */
    protected $envelope_id;
    
    /**
      * $envelope_uri Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
      * @var string
      */
    protected $envelope_uri;
    
    /**
      * $status Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
      * @var string
      */
    protected $status;
    
    /**
      * $last_modified_date_time The date and time the item was last modified.
      * @var string
      */
    protected $last_modified_date_time;
    
    /**
      * $sender_user_id 
      * @var string
      */
    protected $sender_user_id;
    
    /**
      * $sender_name 
      * @var string
      */
    protected $sender_name;
    
    /**
      * $sender_email 
      * @var string
      */
    protected $sender_email;
    
    /**
      * $sender_company 
      * @var string
      */
    protected $sender_company;
    
    /**
      * $created_date_time Indicates the date and time the item was created.
      * @var string
      */
    protected $created_date_time;
    
    /**
      * $sent_date_time The date and time the envelope was sent.
      * @var string
      */
    protected $sent_date_time;
    
    /**
      * $completed_date_time Specifies the date and time this item was completed.
      * @var string
      */
    protected $completed_date_time;
    
    /**
      * $subject 
      * @var string
      */
    protected $subject;
    
    /**
      * $expire_date_time The date and time the envelope is set to expire.
      * @var string
      */
    protected $expire_date_time;
    
    /**
      * $folder_id 
      * @var string
      */
    protected $folder_id;
    
    /**
      * $folder_uri 
      * @var string
      */
    protected $folder_uri;
    
    /**
      * $recipients 
      * @var \DocuSign\eSign\Model\Recipients
      */
    protected $recipients;
    
    /**
      * $recipients_uri Contains a URI for an endpoint that you can use to retrieve the recipients.
      * @var string
      */
    protected $recipients_uri;
    
    /**
      * $is21_cfr_part11 When set to **true**, indicates that this module is enabled on the account.
      * @var string
      */
    protected $is21_cfr_part11;
    
    /**
      * $is_universal_signature_envelope 
      * @var string
      */
    protected $is_universal_signature_envelope;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->owner_name = $data["owner_name"];
            $this->envelope_id = $data["envelope_id"];
            $this->envelope_uri = $data["envelope_uri"];
            $this->status = $data["status"];
            $this->last_modified_date_time = $data["last_modified_date_time"];
            $this->sender_user_id = $data["sender_user_id"];
            $this->sender_name = $data["sender_name"];
            $this->sender_email = $data["sender_email"];
            $this->sender_company = $data["sender_company"];
            $this->created_date_time = $data["created_date_time"];
            $this->sent_date_time = $data["sent_date_time"];
            $this->completed_date_time = $data["completed_date_time"];
            $this->subject = $data["subject"];
            $this->expire_date_time = $data["expire_date_time"];
            $this->folder_id = $data["folder_id"];
            $this->folder_uri = $data["folder_uri"];
            $this->recipients = $data["recipients"];
            $this->recipients_uri = $data["recipients_uri"];
            $this->is21_cfr_part11 = $data["is21_cfr_part11"];
            $this->is_universal_signature_envelope = $data["is_universal_signature_envelope"];
        }
    }
    
    /**
     * Gets owner_name
     * @return string
     */
    public function getOwnerName()
    {
        return $this->owner_name;
    }
  
    /**
     * Sets owner_name
     * @param string $owner_name 
     * @return $this
     */
    public function setOwnerName($owner_name)
    {
        
        $this->owner_name = $owner_name;
        return $this;
    }
    
    /**
     * Gets envelope_id
     * @return string
     */
    public function getEnvelopeId()
    {
        return $this->envelope_id;
    }
  
    /**
     * Sets envelope_id
     * @param string $envelope_id The envelope ID of the envelope status that failed to post.
     * @return $this
     */
    public function setEnvelopeId($envelope_id)
    {
        
        $this->envelope_id = $envelope_id;
        return $this;
    }
    
    /**
     * Gets envelope_uri
     * @return string
     */
    public function getEnvelopeUri()
    {
        return $this->envelope_uri;
    }
  
    /**
     * Sets envelope_uri
     * @param string $envelope_uri Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
     * @return $this
     */
    public function setEnvelopeUri($envelope_uri)
    {
        
        $this->envelope_uri = $envelope_uri;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets last_modified_date_time
     * @return string
     */
    public function getLastModifiedDateTime()
    {
        return $this->last_modified_date_time;
    }
  
    /**
     * Sets last_modified_date_time
     * @param string $last_modified_date_time The date and time the item was last modified.
     * @return $this
     */
    public function setLastModifiedDateTime($last_modified_date_time)
    {
        
        $this->last_modified_date_time = $last_modified_date_time;
        return $this;
    }
    
    /**
     * Gets sender_user_id
     * @return string
     */
    public function getSenderUserId()
    {
        return $this->sender_user_id;
    }
  
    /**
     * Sets sender_user_id
     * @param string $sender_user_id 
     * @return $this
     */
    public function setSenderUserId($sender_user_id)
    {
        
        $this->sender_user_id = $sender_user_id;
        return $this;
    }
    
    /**
     * Gets sender_name
     * @return string
     */
    public function getSenderName()
    {
        return $this->sender_name;
    }
  
    /**
     * Sets sender_name
     * @param string $sender_name 
     * @return $this
     */
    public function setSenderName($sender_name)
    {
        
        $this->sender_name = $sender_name;
        return $this;
    }
    
    /**
     * Gets sender_email
     * @return string
     */
    public function getSenderEmail()
    {
        return $this->sender_email;
    }
  
    /**
     * Sets sender_email
     * @param string $sender_email 
     * @return $this
     */
    public function setSenderEmail($sender_email)
    {
        
        $this->sender_email = $sender_email;
        return $this;
    }
    
    /**
     * Gets sender_company
     * @return string
     */
    public function getSenderCompany()
    {
        return $this->sender_company;
    }
  
    /**
     * Sets sender_company
     * @param string $sender_company 
     * @return $this
     */
    public function setSenderCompany($sender_company)
    {
        
        $this->sender_company = $sender_company;
        return $this;
    }
    
    /**
     * Gets created_date_time
     * @return string
     */
    public function getCreatedDateTime()
    {
        return $this->created_date_time;
    }
  
    /**
     * Sets created_date_time
     * @param string $created_date_time Indicates the date and time the item was created.
     * @return $this
     */
    public function setCreatedDateTime($created_date_time)
    {
        
        $this->created_date_time = $created_date_time;
        return $this;
    }
    
    /**
     * Gets sent_date_time
     * @return string
     */
    public function getSentDateTime()
    {
        return $this->sent_date_time;
    }
  
    /**
     * Sets sent_date_time
     * @param string $sent_date_time The date and time the envelope was sent.
     * @return $this
     */
    public function setSentDateTime($sent_date_time)
    {
        
        $this->sent_date_time = $sent_date_time;
        return $this;
    }
    
    /**
     * Gets completed_date_time
     * @return string
     */
    public function getCompletedDateTime()
    {
        return $this->completed_date_time;
    }
  
    /**
     * Sets completed_date_time
     * @param string $completed_date_time Specifies the date and time this item was completed.
     * @return $this
     */
    public function setCompletedDateTime($completed_date_time)
    {
        
        $this->completed_date_time = $completed_date_time;
        return $this;
    }
    
    /**
     * Gets subject
     * @return string
     */
    public function getSubject()
    {
        return $this->subject;
    }
  
    /**
     * Sets subject
     * @param string $subject 
     * @return $this
     */
    public function setSubject($subject)
    {
        
        $this->subject = $subject;
        return $this;
    }
    
    /**
     * Gets expire_date_time
     * @return string
     */
    public function getExpireDateTime()
    {
        return $this->expire_date_time;
    }
  
    /**
     * Sets expire_date_time
     * @param string $expire_date_time The date and time the envelope is set to expire.
     * @return $this
     */
    public function setExpireDateTime($expire_date_time)
    {
        
        $this->expire_date_time = $expire_date_time;
        return $this;
    }
    
    /**
     * Gets folder_id
     * @return string
     */
    public function getFolderId()
    {
        return $this->folder_id;
    }
  
    /**
     * Sets folder_id
     * @param string $folder_id 
     * @return $this
     */
    public function setFolderId($folder_id)
    {
        
        $this->folder_id = $folder_id;
        return $this;
    }
    
    /**
     * Gets folder_uri
     * @return string
     */
    public function getFolderUri()
    {
        return $this->folder_uri;
    }
  
    /**
     * Sets folder_uri
     * @param string $folder_uri 
     * @return $this
     */
    public function setFolderUri($folder_uri)
    {
        
        $this->folder_uri = $folder_uri;
        return $this;
    }
    
    /**
     * Gets recipients
     * @return \DocuSign\eSign\Model\Recipients
     */
    public function getRecipients()
    {
        return $this->recipients;
    }
  
    /**
     * Sets recipients
     * @param \DocuSign\eSign\Model\Recipients $recipients 
     * @return $this
     */
    public function setRecipients($recipients)
    {
        
        $this->recipients = $recipients;
        return $this;
    }
    
    /**
     * Gets recipients_uri
     * @return string
     */
    public function getRecipientsUri()
    {
        return $this->recipients_uri;
    }
  
    /**
     * Sets recipients_uri
     * @param string $recipients_uri Contains a URI for an endpoint that you can use to retrieve the recipients.
     * @return $this
     */
    public function setRecipientsUri($recipients_uri)
    {
        
        $this->recipients_uri = $recipients_uri;
        return $this;
    }
    
    /**
     * Gets is21_cfr_part11
     * @return string
     */
    public function getIs21CfrPart11()
    {
        return $this->is21_cfr_part11;
    }
  
    /**
     * Sets is21_cfr_part11
     * @param string $is21_cfr_part11 When set to **true**, indicates that this module is enabled on the account.
     * @return $this
     */
    public function setIs21CfrPart11($is21_cfr_part11)
    {
        
        $this->is21_cfr_part11 = $is21_cfr_part11;
        return $this;
    }
    
    /**
     * Gets is_universal_signature_envelope
     * @return string
     */
    public function getIsUniversalSignatureEnvelope()
    {
        return $this->is_universal_signature_envelope;
    }
  
    /**
     * Sets is_universal_signature_envelope
     * @param string $is_universal_signature_envelope 
     * @return $this
     */
    public function setIsUniversalSignatureEnvelope($is_universal_signature_envelope)
    {
        
        $this->is_universal_signature_envelope = $is_universal_signature_envelope;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\DocuSign\eSign\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\DocuSign\eSign\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
